command /bliss [<text>] [<text>] [<text>] [<number>]:
	trigger:
		if arg-3 is set:
			set {_p} to arg-3 parsed as player

		else:
			
			set {_p} to player

		if arg-1 is "withdraw":
			set {_uuid} to uuid of sender
			if {Bliss.GemHealth.%{_uuid}%} < 12:
				if {Bliss.GemHealth.%{_uuid}%} is not 1:
					remove 1 from {Bliss.GemHealth.%{_uuid}%}
					give player nautilus shell with custom model data 300 named "<##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with lore "<##96FFD9>&lFrom: <##FFE4AB>%player%"
					send "<##FFD773>🔮 &6Bottled &f&l1 <##96FFD9>ᴇɴᴇʀɢʏ"
					execute console command "setcorrectgems %sender% energy"

		if arg-1 is "performance":
			set {_uuid} to uuid of sender
			if arg-2 is "none":
				remove sender from {Bliss.Particles.Less::*}
				remove sender from {Bliss.Particles.Default::*}
				add sender to {Bliss.Particles.None::*}
				send "<##FFD773>🔮 &aPerformance Level changed to &eNONE"


			else if arg-2 is "default":
				add sender to {Bliss.Particles.Default::*}
				remove sender from {Bliss.Particles.Less::*}
				remove sender from {Bliss.Particles.None::*}
				send "<##FFD773>🔮 &aPerformance Level changed to &eDEFAULT"

			else if arg-2 is "less":
				add sender to {Bliss.Particles.Less::*}
				remove sender from {Bliss.Particles.Default::*}
				remove sender from {Bliss.Particles.None::*}
				send "<##FFD773>🔮 &aPerformance Level changed to &eLESS"

			else:
				send "&cUsage: /bliss performance (level)" to player

			


		if arg-1 is "particles":
			set {_uuid} to uuid of sender
			if arg-2 is "none":
				remove sender from {Bliss.Particles.Less::*}
				remove sender from {Bliss.Particles.Default::*}
				add sender to {Bliss.Particles.None::*}
				send "<##FFD773>🔮 &aPerformance Level changed to &eNONE"


			else if arg-2 is "default":
				add sender to {Bliss.Particles.Default::*}
				remove sender from {Bliss.Particles.Less::*}
				remove sender from {Bliss.Particles.None::*}
				send "<##FFD773>🔮 &aPerformance Level changed to &eDEFAULT"

			else if arg-2 is "less":
				add sender to {Bliss.Particles.Less::*}
				remove sender from {Bliss.Particles.Default::*}
				remove sender from {Bliss.Particles.None::*}
				send "<##FFD773>🔮 &aPerformance Level changed to &eLESS"

			else:
				send "&cUsage: /bliss performance (level)" to player




		if sender has permission "BlissSkriptV3.Bliss":


			if arg-1 is "revive":
				set {_p} to arg-2 parsed as offline player
				set {_uuid} to uuid of {_p}
				remove {_uuid} from {BannedPlayers::*}
				remove arg-2 from {BannedPlayers::*}

				set {Bliss.GemHealth.%{_uuid}%} to 6
				unban arg-2


			if arg-1 is "item":

				if arg-2 is "revive":
					if arg-4 is set:
						if {_p} is set:
							give arg-4 of {Revive} to {_p}

						else:
							give arg-4 of {Revive} to player

					else if arg-4 is not set:

						if {_p} is set:
							give 1 of {Revive} to {_p}
						else:
							give 1 of {Revive} to player



					send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% %{Revive}'s name%" to player

					send "<##FFD773>🔮 <##B8FFFB>You have received %{Revive}'s name%" to {_p}

				if arg-2 is "repair":
					if arg-4 is set:

						if {_p} is set:
							give arg-4 of {Repair} to {_p}
						else:
							give arg-4 of {Repair} to player

						


					else if arg-4 is not set:
						if {_p} is set:
							give 1 of {Repair} to {_p}
						else:
							give 1 of {Repair} to player


					send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% %{Repair}'s name%" to player

					send "<##FFD773>🔮 <##B8FFFB>You have received %{Repair}'s name%" to {_p}


						
				if arg-2 is "energy":
					if arg-4 is set:
						give arg-4 of nautilus shell with custom model data 300 named "<##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with lore "<##96FFD9>&lFrom: <##FFE4AB>None" to {_p}
					else if arg-4 is not set:
						give 1 of nautilus shell with custom model data 300 named "<##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with lore "<##96FFD9>&lFrom: <##FFE4AB>None" to {_p}


					send "<##FFD773>🔮 <##B8FFFB>You have given <##ffe4ab>%{_p}% <##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" to player

					send "<##FFD773>🔮 <##B8FFFB>You have received <##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" to {_p}


#				if arg-2 is "GemFragment":
#					if arg-4 is set:
#						give arg-4 of {gemfragment} to {_p}
#					else if arg-4 is not set:
#						give 1 of {gemfragment} to {_p}
#
#
#					send "<##FFD773>🔮 <##B8FFFB>You have given <##ffe4ab>%{_p}% %{gemfragment}'s name%" to player
#
#					send "<##FFD773>🔮 <##B8FFFB>You have received %{gemfragment}'s name%" to {_p}
#
#				if arg-2 is "Remote":
#					if arg-4 is set:
#						set {RemoteControl} to a globe banner pattern named "&7[&e&l⭐&7] <##75FDFF>Remote <##FFCF75>Control" with lore "<##8EFF75>Right click for <##FFF386>&l/<##D1EEA4>&lm<##A3E9C3>&le<##74E3E1>&ln<##46DEFF>&lu" with custom model data 310
#						enchant {RemoteControl} with sharpness 1
#						give arg-4 of {RemoteControl} to {_p}
#					else if arg-4 is not set:
#						set {RemoteControl} to a globe banner pattern named "&7[&e&l⭐&7] <##75FDFF>Remote <##FFCF75>Control" with lore "<##8EFF75>Right click for <##FFF386>&l/<##D1EEA4>&lm<##A3E9C3>&le<##74E3E1>&ln<##46DEFF>&lu" with custom model data 310
#						enchant {RemoteControl} with sharpness 1
#						give 1 of {RemoteControl} to {_p}
#
#					send "<##FFD773>🔮 <##B8FFFB>You have given <##ffe4ab>%{_p}% %{RemoteControl}'s name%" to player
#
#					send "<##FFD773>🔮 <##B8FFFB>You have received %{RemoteControl}'s name%" to {_p}

				if arg-2 is "upgrader":
					if arg-4 is set:
						give arg-4 of {Upgrader} to {_p}
					else if arg-4 is not set:
						give 1 of {Upgrader} to {_p}

					send "<##FFD773>🔮 <##B8FFFB>You have given <##ffe4ab>%{_p}% %{Upgrader}'s name%" to player

					send "<##FFD773>🔮 <##B8FFFB>You have received %{Upgrader}'s name%" to {_p}

				if arg-2 is "trader":
					if arg-4 is set:
						give arg-4 of {Trader} to {_p}
					else if arg-4 is not set:
						give 1 of {Trader} to {_p}


					send "<##FFD773>🔮 <##B8FFFB>You have given <##ffe4ab>%{_p}% %{Trader}'s name%" to player

					send "<##FFD773>🔮 <##B8FFFB>You have received %{Trader}'s name%" to {_p}




			if arg-1 is "setenergy":

				set {_number} to arg-3 parsed as an number
				set {_p} to arg-2 parsed as player
				set {_uuid} to uuid of {_p}

				set {Bliss.GemHealth.%{_uuid}%} to {_number}
				setenergy({_p}, {_number})

				if {_number} > 9:
					set {_msg} to "<##57FFC7>Pristine &f+ <##96FFD9>5"
		
				else if {_number} is 9:
					set {_msg} to "<##57FFC7>Pristine &f+ <##96FFD9>4"
		
				else if {_number} is 8:
					set {_msg} to "<##57FFC7>Pristine &f+ <##96FFD9>3"
		
				else if {_number} is 7:
					set {_msg} to "<##57FFC7>Pristine &f+ <##96FFD9>2"
		
				else if {_number} is 6:
					set {_msg} to "<##57FFC7>Pristine &f+ <##96FFD9>1"
		
				else if {_number} is 5:
					set {_msg} to "<##57FFC7>Pristine"
		
				else if {_number} is 4:
					set {_msg} to "<##57FF8F>Scratched"
		
				else if {_number} is 3:
					set {_msg} to "<##7958DB>Cracked"
		
				else if {_number} is 2:
					set {_msg} to "<##FFC929>Damaged"
		
				else if {_number} is 1:
					set {_msg} to "<##FF1111>Ruined"
		
				else if {_number} is 0:
					set {_msg} to "&7Broken"

				else if {_number} < 1:
					set {_msg} to "N/A"

				loop all items in {_p}'s inventory:
					if {_msg2} is not set:
						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "strength":
							set {_msg2} to "<##F10303>&lsᴛʀᴇɴɢᴛʜ &r&fɢᴇᴍ"
						
						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "speed":
							set {_msg2} to "<##FEFD17>&lsᴘᴇᴇᴅ &r&fɢᴇᴍ"

						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "life":
							set {_msg2} to "<##FE04B4>&lʟɪғᴇ &r&fɢᴇᴍ"

						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "puff":
							set {_msg2} to "<##EFEFEF>&lᴘᴜғғ &r&fɢᴇᴍ"

						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "fire":
							set {_msg2} to "<##FE8120>&lғɪʀᴇ &r&fɢᴇᴍ"

						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "wealth":
							set {_msg2} to "<##0EC912>&lᴡᴇᴀʟᴛʜ &r&fɢᴇᴍ"
							
						if string tag "PublicBukkitValues;blissgems:gem-type" of nbt compound of loop-item is "astra":
							set {_msg2} to "<##A01FFF>&lᴀsᴛʀᴀ &r&fɢᴇᴍ"
	

				send "<##FFD773>Your gem has been set to %{_msg}% <##FFD773>by <##FEFD17>%player%" to {_p}
				send "<##FFD773>set &l%{_p}%'s &r%{_msg2}% <##FFD773>to %{_msg}%" to player


					




				
			if arg-1 is "gem":

				if arg-3 is "random":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player

					
					set {_num} to a random integer between 1 to 7

					
					
					if {_num} is 1:
						execute player command "bliss gem %{_p}% strength %arg-4%"


					if {_num} is 2:
						execute player command "bliss gem %{_p}% speed %arg-4%"


					if {_num} is 3:
						execute player command "bliss gem %{_p}% life %arg-4%"


					if {_num} is 4:
						execute player command "bliss gem %{_p}% fire %arg-4%"


					if {_num} is 5:
						execute player command "bliss gem %{_p}% puff %arg-4%"


					if {_num} is 6:
						execute player command "bliss gem %{_p}% wealth %arg-4%"


					if {_num} is 7:
						execute player command "bliss gem %{_p}% astra %arg-4%"

	





				
				
				
				if arg-2 is set:
					set {_p} to arg-2 parsed as player
		
				else:
					
					set {_p} to player


				set {_uuid} to uuid of {_p}
				set {_e} to {Bliss.GemHealth.%{_uuid}%}

				if arg-3 is "strength":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player


					set {_uuid} to uuid of {_p}
				

					if arg-4 is 1 or 2:
						set {_gem} to "strength"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##F10303>&lsᴛʀᴇɴɢᴛʜ <##B8FFFB>gem &7Tier &b%arg-4%" to player




				if arg-3 is "fire":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player


					set {_uuid} to uuid of {_p}
				

					if arg-4 is 1 or 2:
						set {_gem} to "fire"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##FE8120>&lғɪʀᴇ <##B8FFFB>gem &7Tier &b%arg-4%" to player
					
		


					
				if arg-3 is "life":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player


					set {_uuid} to uuid of {_p}
				

					if arg-4 is 1 or 2:
						set {_gem} to "life"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##FE04B4>&lʟɪғᴇ <##B8FFFB>gem &7Tier &b%arg-4%" to player
						

				if arg-3 is "puff":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player


					set {_uuid} to uuid of {_p}
				

					if arg-4 is 1 or 2:
						set {_gem} to "puff"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##EFEFEF>&lᴘᴜғғ <##B8FFFB>gem &7Tier &b%arg-4%" to player
						



				
						
				if arg-3 is "wealth":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player


					set {_uuid} to uuid of {_p}
				

					if arg-4 is 1 or 2:
						set {_gem} to "wealth"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##0EC912>&lᴡᴇᴀʟᴛʜ <##B8FFFB>gem &7Tier &b%arg-4%" to player
						
						



				if arg-3 is "speed":

					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player
					set {_uuid} to uuid of {_p}
					

					if arg-4 is 1 or 2:
						set {_gem} to "speed"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##FEFD17>&lsᴘᴇᴇᴅ <##B8FFFB>gem &7Tier &b%arg-4%" to player
						

				if arg-3 is "astra":
					if arg-2 is set:
						set {_p} to arg-2 parsed as player
			
					else:
						
						set {_p} to player


					set {_uuid} to uuid of {_p}

					if arg-4 is 1 or 2:
						set {_gem} to "astra"
						send "<##FFD773>🔮 <##B8FFFB>You have given <##FFD773>%{_p}% <##A01FFF>&lᴀsᴛʀᴀ <##B8FFFB>gem &7Tier &b%arg-4%" to player
					
				
					
				if {_e} > 9:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 10, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 10, 3, 3, "false")
				
				else if {_e} is 9:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 9, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 9, 3, 3, "false")
	
				else if {_e} is 8:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 8, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 8, 3, 3, "false")
	
				else if {_e} is 7:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 7, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 7, 3, 3, "false")
	
				else if {_e} is 6:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 6, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 6, 3, 3, "false")
	
				else if {_e} is 5:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 5, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 5, 3, 3, "false")
	
				else if {_e} is 4:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 4, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 4, 3, 3, "false")
	
				else if {_e} is 3:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 3, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 3, 3, 3, "false")
	
				else if {_e} is 2:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 2, 3, 3, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 2, 3, 3, "false")
	
				else if {_e} is 1:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 3, 3, 1, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 3, 3, 1, "false")

				else if {_e} < 1:
					if arg-4 is 1:
						givegem("%{_gem}%", 1, {_p}, 3, 3, 0, "false")

					if arg-4 is 2:
						givegem("%{_gem}%", 2, {_p}, 3, 3, 0, "false")


		else:
			if arg-1 is not "withdraw" or "particles" or "performance":
				send "<##FFD773>🔮 &cYou don't have permission to use that!"
				















on tab complete of "/bliss":
	set tab completions for position 1 to "gem", "item", "particles", "revive", "setenergy" and "withdraw"
	if tab arg-1 = tab arg-1:
		set tab completion for position 3 to all players

	if tab arg-1 = "setenergy":
		set tab completions for position 2 to all players
		set tab completions for position 3 to 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
		
	if tab arg-1 = "withdraw":
		set tab completions for position 2 to 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

	if tab arg-1 = "gem":
		set tab completions for position 2 to all players
		set tab completions for position 3 to "astra", "fire", "life", "puff", "random", "speed", "strength" and "wealth"
		set tab completions for position 4 to "(tier)"

	if tab arg-1 = "item":
		set tab completions for position 2 to "energy", "repair", "revive", "trader" and "upgrader"

	if tab arg-1 = "particles":
		set tab completions for position 2 to "default", "less" and "none"

	if tab arg-1 = "performance":
		set tab completions for position 2 to "default", "less" and "none"

	if tab arg-1 = "revive":
		set {_s::*} to {BannedPlayers::*}

		loop {_s::*}:
			set {_t} to loop-value parsed as offline player
			add {_t} to {_ss::*}

		set tab completions for position 2 to {_ss::*}


